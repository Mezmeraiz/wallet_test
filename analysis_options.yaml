# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

analyzer:
  exclude:
    - lib/ffi_impl/
    - gen/

linter:
  rules:
    depend_on_referenced_packages: false
    avoid_print: true
    prefer_single_quotes: true
    empty_statements: true
    close_sinks: true
    curly_braces_in_flow_control_structures: false
    await_only_futures: true
    avoid_empty_else: true
    avoid_relative_lib_imports: true
    always_declare_return_types: true
    cancel_subscriptions: true
    prefer_final_in_for_each: true
    avoid_returning_null_for_void: true
    avoid_unnecessary_containers: true
    avoid_web_libraries_in_flutter: true
    no_logic_in_create_state: true
    prefer_const_constructors: true
    use_full_hex_values_for_flutter_colors: true
    constant_identifier_names: true
    annotate_overrides: true
    avoid_function_literals_in_foreach_calls: true
    avoid_init_to_null: true
    avoid_null_checks_in_equality_operators: true
    avoid_renaming_method_parameters: true
    avoid_return_types_on_setters: true
    avoid_single_cascade_in_expression_statements: true
    control_flow_in_finally: true
    empty_constructor_bodies: true
    exhaustive_cases: true
    implementation_imports: true
    library_names: true
    library_prefixes: true
    null_closures: true
    overridden_fields: true
    package_names: true
    prefer_adjacent_string_concatenation: true
    prefer_collection_literals: true
    prefer_conditional_assignment: true
    prefer_contains: true
    prefer_for_elements_to_map_fromIterable: true
    prefer_function_declarations_over_variables: true
    prefer_if_null_operators: true
    prefer_initializing_formals: true
    prefer_inlined_adds: true
    prefer_is_not_operator: true
    prefer_null_aware_operators: true
    prefer_spread_collections: true
    prefer_void_to_null: true
    recursive_getters: true
    slash_for_doc_comments: true
    type_init_formals: true
    unnecessary_brace_in_string_interps: true
    unnecessary_const: true
    unnecessary_getters_setters: true
    unnecessary_new: true
    unnecessary_null_in_if_null_operators: true
    unnecessary_string_escapes: true
    unnecessary_string_interpolations: true
    unnecessary_this: true
    use_function_type_syntax_for_parameters: true
    use_rethrow_when_possible: true
    use_super_parameters: true
    directives_ordering: true
    prefer_expression_function_bodies: true
    avoid_redundant_argument_values: true
    non_constant_identifier_names: true
    # prefer_final_locals: true
    prefer_final_fields: true
